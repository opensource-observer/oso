# NOTE: This name appears in GitHub's Checks API and in workflow's status badge.
name: deploy-hasura
env:
  HASURA_GRAPHQL_ADMIN_SECRET: ${{ secrets.HASURA_GRAPHQL_ADMIN_SECRET }}
  HASURA_GRAPHQL_ENDPOINT: ${{ vars.HASURA_GRAPHQL_ENDPOINT }}
  HASURA_GRAPHQL_DATABASE_URL: ${{ secrets.HASURA_GRAPHQL_DATABASE_URL }}
  DBT_TARGET: "production"
  GOOGLE_CREDENTIALS_JSON: ${{ vars.GOOGLE_TEST_DUMMY_CREDENTIALS_JSON }}
  GOOGLE_PROJECT_ID: opensource-observer

# Trigger the workflow when:
on:
  # A push occurs to one of the matched branches.
  push:
    branches:
      - main
    paths:
      - apps/hasura2/**
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy-hasura:
    # NOTE: This name appears in GitHub's Checks API.
    name: deploy-hasura
    environment: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --strict-peer-dependencies]

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          cache: "pnpm"
          node-version: "20.x"

      - name: Setup Python and UV
        uses: astral-sh/setup-uv@v5
        with:
          python-version: 3.12
  
      - name: Install dependencies
        run: uv sync --all-packages --all-extras

      - name: Login to google
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GOOGLE_BQ_ADMIN_CREDENTIALS_JSON }}'
          create_credentials_file: true

      - name: Setup dbt profile
        run: |
          bash .github/scripts/create-dbt-profile.sh ${GOOGLE_APPLICATION_CREDENTIALS}

      - name: Build
        run: pnpm build:hasura

      - name: Deploy
        run: pnpm deploy:hasura
