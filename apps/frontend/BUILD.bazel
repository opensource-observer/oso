load("@aspect_rules_js//js:defs.bzl", "js_library")
load("@aspect_rules_ts//ts:defs.bzl", "ts_config", "ts_project")
load("@npm//:defs.bzl", "npm_link_all_packages")

npm_link_all_packages(name = "node_modules")

ts_config(
    name = "tsconfig",
    src = "tsconfig.json",
    deps = [
        ":node_modules/@docusaurus/tsconfig",
    ],
)

js_library(
    name = "package_json",
    srcs = ["package.json"],
)

ts_project(
    name = "next-env.d",
    srcs = ["next-env.d.ts"],
)

ts_project(
    name = "plasmic-init-client",
    srcs = ["plasmic-init-client.tsx"],
    data = [
        "//:node_modules/@mui/material",
        "//:node_modules/@plasmicapp/loader-nextjs",
        "//:node_modules/@tremor/react",
    ],
    deps = [
        ":plasmic-init",
        "//:node_modules/@mui/material",
        "//:node_modules/@plasmicapp/loader-nextjs",
        "//:node_modules/@tremor/react",
        "//apps/frontend/components/dataprovider:auth-router",
        "//apps/frontend/components/dataprovider:cube-data-provider",
        "//apps/frontend/components/dataprovider:metrics-data-provider",
        "//apps/frontend/components/dataprovider:supabase-query",
        "//apps/frontend/components/widgets:algolia",
        "//apps/frontend/components/widgets:auth-actions",
        "//apps/frontend/components/widgets:auth-form",
        "//apps/frontend/components/widgets:feedback-farm",
        "//apps/frontend/components/widgets:supabase-write",
        "//apps/frontend/components/widgets:tremor",
        "//apps/frontend/lib:config",
        "//apps/frontend/lib:metrics-utils",
    ],
)

ts_project(
    name = "plasmic-init",
    srcs = ["plasmic-init.ts"],
    data = [
        "//:node_modules/@opensource-observer/utils",
        "//:node_modules/@plasmicapp/loader-nextjs",
    ],
    deps = [
        "//:node_modules/@opensource-observer/utils",
        "//:node_modules/@plasmicapp/loader-nextjs",
        "//apps/frontend/lib:config",
    ],
)

js_library(
    name = "next.config",
    srcs = ["next.config.js"],
)

js_library(
    name = "postcss.config",
    srcs = ["postcss.config.js"],
)

js_library(
    name = "tailwind.config",
    srcs = ["tailwind.config.js"],
)
