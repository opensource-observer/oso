---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mcs.fullname" . }}
  labels:
    {{- include "mcs.labels" . | nindent 4 }}
spec:
  # for now this application is a single process + thread
  replicas: 1
  selector:
    matchLabels:
      component: mcs-frontend
  template:
    metadata:
      labels:
        {{- include "mcs.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "mcs.fullname" . }}
      {{- with .Values.mcs.frontend.affinity }}
      affinity:
        {{ toYaml . | nindent 12 }}
      {{- end }}
      {{- with .Values.mcs.frontend.nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 12 }}
      {{- end }}
      {{- with .Values.mcs.frontend.tolerations }}
      tolerations:
        {{ toYaml . | nindent 12 }}
      {{- end }}
      containers:
      - name: metrics-calculation-service
        image: {{ .Values.mcs.image.repo }}:{{ .Values.mcs.image.tag }}
        command: ["uvicorn"] 
        workingDir: /usr/bin/app/warehouse/metrics-service
        args: 
          - "metrics_services.server:app"
          - "--host"
          - "0.0.0.0"
          - "--port"
          - "8000"
          - "--log-config"
          - "/config/log_config.yaml"
        imagePullPolicy: Always
        ports:
          - containerPort: 8000
        {{- with .Values.mcs.frontend.resources }}
        resources:
          {{ toYaml . | nindent 12 }}
        {{- end }}
        volumeMounts:
          - name: config
            mountPath: /config
        env:
          - name: METRICS_CLUSTER_NAMESPACE
            value: "{{ .Values.mcs.cluster.namespace }}"
          - name: METRICS_CLUSTER_SERVICE_ACCOUNT
            value: "{{ .Values.mcs.cluster.serviceAccount }}"
          - name: METRICS_CLUSTER_NAME
            value: "{{ .Values.mcs.cluster.name }}"
          - name: METRICS_CLUSTER_IMAGE_REPO
            value: "{{ .Values.mcs.cluster.image.repo }}"
          - name: METRICS_CLUSTER_IMAGE_TAG
            value: "{{ .Values.mcs.cluster.image.tag }}"
          - name: METRICS_SCHEDULER_MEMORY_LIMIT
            value: "{{ .Values.mcs.cluster.scheduler.memory.limit }}"
          - name: METRICS_SCHEDULER_MEMORY_REQUEST
            value: "{{ .Values.mcs.cluster.scheduler.memory.request }}"
          - name: METRICS_SCHEDULER_POOL_TYPE
            value: "{{ .Values.mcs.cluster.scheduler.poolType }}"
          - name: METRICS_WORKER_THREADS
            value: "{{ .Values.mcs.cluster.worker.threads }}"
          - name: METRICS_WORKER_MEMORY_LIMIT
            value: "{{ .Values.mcs.cluster.worker.memory.limit }}"
          - name: METRICS_WORKER_MEMORY_REQUEST
            value: "{{ .Values.mcs.cluster.worker.memory.request }}"
          - name: METRICS_WORKER_DUCKDB_PATH
            value: "{{ .Values.mcs.cluster.worker.duckdb_path }}"
          - name: METRICS_WORKER_POOL_TYPE
            value: "{{ .Values.mcs.cluster.worker.poolType }}"
          - name: METRICS_GCS_BUCKET
            value: "{{ .Values.mcs.gcs.bucket }}"
          - name: METRICS_GCS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: "{{ include "mcs.fullname" . }}-secrets"
                key: gcs_key_id
          - name: METRICS_GCS_SECRET
            valueFrom:
              secretKeyRef:
                name: "{{ include "mcs.fullname" . }}-secrets"
                key: gcs_secret
          - name: METRICS_GCS_RESULTS_PATH_PREFIX
            value: "{{ .Values.mcs.gcs.results_path_prefix }}"
          - name: METRICS_TRINO_HOST
            value: "{{ .Values.mcs.trino.host }}"
          - name: METRICS_TRINO_PORT
            value: "{{ .Values.mcs.trino.port }}"
          - name: METRICS_TRINO_USER
            value: "{{ .Values.mcs.trino.user }}"
          - name: METRICS_TRINO_CATALOG
            value: "{{ .Values.mcs.trino.catalog }}"
          - name: METRICS_HIVE_CATALOG
            value: "{{ .Values.mcs.hive.catalog }}"
          - name: METRICS_HIVE_SCHEMA
            value: "{{ .Values.mcs.hive.schema }}"
          - name: METRICS_DEBUG_ALL
            value: "{{ .Values.mcs.debug.all }}"
          - name: METRICS_DEBUG_CACHE
            value: "{{ .Values.mcs.debug.cache }}"
          - name: METRICS_DEBUG_CLUSTER
            value: "{{ .Values.mcs.debug.cluster }}"
          - name: METRICS_DEBUG_CLUSTER_NO_SHUTDOWN
            value: "{{ .Values.mcs.debug.cluster_no_shutdown }}"
      volumes:
        - name: config
          configMap: 
            # Provide the name of the ConfigMap containing the files you want
            # to add to the container
            name: {{ include "mcs.fullname" . }}-config