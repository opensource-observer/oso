apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: production-consumer-trino
spec:
  values:
    service:
      annotations:
        tailscale.com/expose: "true"
    env:
      - name: TRINO_GCS_KEY_ID
        value: gcp:secretmanager:production-mcs-gcs-key-id/versions/latest
      - name: TRINO_GCS_SECRET
        value: gcp:secretmanager:production-mcs-gcs-secret/versions/latest
    serviceAccount:
      name: production-consumer-trino
    securityContext:
      fsGroup: 1000
    accessControl:
      type: properties
      properties: |
        access-control.config-files=/etc/trino/file-based.properties,/etc/trino/opa.properties
    additionalConfigProperties:
      - http-server.process-forwarded=true
      - internal-communication.shared-secret=gcp:secretmanager:production-consumer-trino-shared-secret/versions/latest
      - http-server.authentication.allow-insecure-over-http=true
      - retry-policy=QUERY
      - catalog.management=dynamic
    ingress:
      enabled: true
      className: ingress-internal-cloudflare
      hosts:
        - host: trino.opensource.observer
          paths:
            - path: /
              pathType: Prefix

    initContainers:
      coordinator:
        # Used to create auth files
        - name: init-coordinator
          image: alpine
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - 'mkdir /etc/auth/password;
               printf "${TRINO_ADMIN}\n${TRINO_USER}" > /etc/auth/password/password.db;
               printf "${JWT_BASE64_SECRET_KEY}" > /etc/auth/jwt.key'
          env:
            - name: TRINO_USER
              value: gcp:secretmanager:production-consumer-trino-auth/versions/latest
            - name: TRINO_ADMIN
              value: gcp:secretmanager:production-consumer-trino-admin/versions/latest
            - name: JWT_BASE64_SECRET_KEY
              value: gcp:secretmanager:production-consumer-trino-jwt-secret-key/versions/latest
          volumeMounts:
            - mountPath: /etc/auth
              name: trino-auth-volume
    coordinator:
      annotations:
        gke-gcsfuse/volumes: "true"
      resources:
        requests:
          cpu: 1200m
          memory: 8000Mi
      tolerations:
        - key: pool_type
          operator: Equal
          value: cons-trino-coord
          effect: NoSchedule
      nodeSelector:
        pool_type: cons-trino-coord
      jvm:
        maxHeapSize: "7G"
      additionalJVMConfig:
        - "--add-opens=java.base/java.nio=ALL-UNNAMED"
      additionalConfigFiles:
        catalog-store.properties: |
          catalog.config-dir=/etc/trino/dynamic-catalog
        file-based.properties: |
          access-control.name=file
          security.refresh-period=60s
          security.config-file=/etc/trino/access-control/rules.json
        opa.properties: |
          access-control.name=opa
          opa.policy.uri=http://opa.production-open-policy-agent.svc.cluster.local:8181/v1/data/trino/allow
      configMounts:
        - name: trino-file-access-control
          configMap: trino-access-control
          path: /etc/trino/access-control
      additionalVolumeMounts:
        - name: trino-auth-volume
          mountPath: /etc/trino/auth
          readOnly: true
        - name: trino-catalog-volume
          mountPath: /etc/trino/dynamic-catalog
          readOnly: false
      additionalVolumes:
        - name: trino-auth-volume
          emptyDir: {}
        - name: trino-catalog-volume
          persistentVolumeClaim:
            claimName: trino-catalog-pvc

    worker:
      resources:
        requests:
          cpu: 7400m
          memory: 40000Mi
      tolerations:
        - key: pool_type
          operator: Equal
          value: cons-trino-worker
          effect: NoSchedule
      nodeSelector:
        pool_type: cons-trino-worker
      config:
        query:
          maxMemoryPerNode: 15GB
      jvm:
        maxHeapSize: "35G"
      additionalJVMConfig:
        - "--add-opens=java.base/java.nio=ALL-UNNAMED"

    additionalExchangeManagerProperties:
      - "exchange.sink-buffers-per-partition=6"
      - "exchange.sink-buffer-pool-min-size=6"
      - "exchange.source-concurrent-readers=6"
      - "exchange.s3.region=us"
      - "exchange.s3.aws-access-key=${ENV:TRINO_GCS_KEY_ID}"
      - "exchange.s3.aws-secret-key=${ENV:TRINO_GCS_SECRET}"
      - "exchange.s3.endpoint=https://storage.googleapis.com"

    server:
      exchangeManager:
        name: filesystem
        baseDir: gs://oso-consumer-iceberg-exchange-usc1/trino-exchange
      config:
        authenticationType: PASSWORD,JWT
        query:
          maxMemory: "100GB"
      coordinatorExtraConfig: |
        http-server.authentication.jwt.key-file=/etc/trino/auth/jwt.key
        http-server.authentication.jwt.required-issuer=opensource-observer
        http-server.authentication.jwt.required-audience=consumer-trino
        access-control.config-files=/etc/trino/file-based.properties,/etc/trino/opa.properties
      workers: 1
      autoscaling:
        enabled: true
        maxReplicas: 5
        targetCPUUtilizationPercentage: 20
        behavior:
          scaleDown:
            stabilizationWindowSeconds: 600
            policies:
              - type: Pods
                value: 1
                periodSeconds: 60
          scaleUp:
            stabilizationWindowSeconds: 0
            policies:
              - type: Percent
                value: 100
                periodSeconds: 15
              - type: Pods
                value: 2
                periodSeconds: 15
            selectPolicy: Max
