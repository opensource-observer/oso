apiVersion: v1
kind: Namespace
metadata:
  name: base-dagster
  labels:
    toolkit.fluxcd.io/tenant: apps
    ops.opensource.observer/environment: base
    kube-secrets-init.doit-intl.com/enable-mutation: "true"
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: dagster
  namespace: base-dagster
spec:
  chart:
    spec:
      chart: ./ops/helm-charts/oso-dagster
      sourceRef:
        kind: GitRepository
        name: flux-system
        namespace: flux-system
  interval: 50m
  install:
    timeout: 10m
    remediation:
      retries: 3
  upgrade:
    timeout: 10m
    remediation:
      retries: 3
  values:
    osoDagster:
      verboseLogs: 1

    global:
      serviceAccountName: base-dagster
    dagster:
      # For now let's ignore debug logs unless things become a problem. We need to
      # configure stdout logging and have the dagster logging handler ignore debug
      # log
      pythonLogs:
        pythonLogLevel: "INFO"
        # Include internal python libraries in the dagster logs.
        managedPythonLoggers:
          - metrics_tools
          - oso_dagster
      nameOverride: "dagster"
      ingress:
        enabled: true
        ingressClassName: ingress-internal-cloudflare
        dagsterWebserver:
          host: base-admin-dagster.opensource.observer
        readOnlyDagsterWebserver:
          host: base-readonly-dagster.opensource.observer
      runLauncher:
        config:
          k8sRunLauncher:
            envConfigMaps:
              - name: dagster-oso-extra-env 
      dagsterWebserver:
        enableReadOnly: true
        envConfigMaps:
          - name: dagster-oso-extra-env
      dagsterDaemon:
        envConfigMaps:
          - name: dagster-oso-extra-env
        runCoordinator:
          type: QueuedRunCoordinator
          config:
            queuedRunCoordinator:
              maxConcurrentRuns: 15
              tagConcurrencyLimits:
                - key: "dagster/concurrency_key"
                  value:
                    applyLimitPerUniqueValue: true
                  limit: 1
      dagster-user-deployments:
        deployments:
          - name: "oso-dagster"
            image:
              repository: "ghcr.io/opensource-observer/oso"
              tag: latest
              pullPolicy: Always
            envConfigMaps:
              - name: dagster-oso-extra-env
            port: 3030
            dagsterApiGrpcArgs:
              - "-m"
              - "oso_dagster.definitions"
            includeConfigInLaunchedRuns:
              enabled: false

  postRenderers:
    - kustomize:
        patches:
          - patch: |
              apiVersion: apps/v1
              kind: Deployment
              metadata:
                name: all-deployments
              spec:
                template:
                  spec:
                    initContainers:
                      - name: check-db-ready
                        envFrom:
                          - configMapRef:
                              name: dagster-oso-extra-env
            target:
              kind: Deployment
              labelSelector: app.kubernetes.io/name=dagster
