CREATE SCHEMA IF NOT EXISTS bigquery.open_collective;

CREATE TABLE IF NOT EXISTS bigquery.open_collective.deposits (
   id varchar,
   legacy_id bigint,
   "group" varchar,
   type varchar,
   kind varchar,
   description varchar,
   amount json,
   amount_in_host_currency json,
   host_currency_fx_rate double,
   net_amount json,
   net_amount_in_host_currency json,
   tax_amount json,
   tax_info json,
   platform_fee json,
   host_fee json,
   payment_processor_fee json,
   account json,
   from_account json,
   to_account json,
   expense json,
   "order" json,
   created_at timestamp(6) with time zone,
   updated_at timestamp(6) with time zone,
   is_refunded boolean,
   is_refund boolean,
   is_disputed boolean,
   is_in_review boolean,
   payment_method json,
   payout_method json,
   is_order_rejected boolean,
   merchant_id varchar,
   invoice_template varchar,
   host json,
   _dlt_load_id varchar NOT NULL,
   _dlt_id varchar NOT NULL
);

INSERT INTO
   bigquery.open_collective.deposits (
      id,
      legacy_id,
      "group",
      type,
      kind,
      description,
      amount,
      amount_in_host_currency,
      host_currency_fx_rate,
      net_amount,
      net_amount_in_host_currency,
      tax_amount,
      tax_info,
      platform_fee,
      host_fee,
      payment_processor_fee,
      account,
      from_account,
      to_account,
      expense,
      "order",
      created_at,
      updated_at,
      is_refunded,
      is_refund,
      is_disputed,
      is_in_review,
      payment_method,
      payout_method,
      is_order_rejected,
      merchant_id,
      invoice_template,
      host,
      _dlt_load_id,
      _dlt_id
   )
VALUES
   (
      '1',
      1,
      'group1',
      'type1',
      'kind1',
      'description1',
      json_parse('{}'),
      json_parse('{}'),
      1.0,
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      current_timestamp - interval '2' day,
      current_timestamp - interval '2' day,
      false,
      false,
      false,
      false,
      json_parse('{}'),
      json_parse('{}'),
      false,
      'merchant1',
      'template1',
      json_parse('{}'),
      'load_id1',
      'id1'
   ),
   (
      '2',
      2,
      'group2',
      'type2',
      'kind2',
      'description2',
      json_parse('{}'),
      json_parse('{}'),
      1.0,
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      current_timestamp - interval '1' day,
      current_timestamp - interval '1' day,
      false,
      false,
      false,
      false,
      json_parse('{}'),
      json_parse('{}'),
      false,
      'merchant2',
      'template2',
      json_parse('{}'),
      'load_id2',
      'id2'
   );

CREATE TABLE IF NOT EXISTS bigquery.open_collective.expenses (
   id varchar,
   legacy_id bigint,
   "group" varchar,
   type varchar,
   kind varchar,
   description varchar,
   amount json,
   amount_in_host_currency json,
   host_currency_fx_rate double,
   net_amount json,
   net_amount_in_host_currency json,
   tax_amount json,
   tax_info json,
   platform_fee json,
   host_fee json,
   payment_processor_fee json,
   account json,
   from_account json,
   to_account json,
   expense json,
   "order" json,
   created_at timestamp(6) with time zone,
   updated_at timestamp(6) with time zone,
   is_refunded boolean,
   is_refund boolean,
   is_disputed boolean,
   is_in_review boolean,
   payment_method json,
   payout_method json,
   is_order_rejected boolean,
   merchant_id varchar,
   invoice_template varchar,
   host json,
   _dlt_load_id varchar NOT NULL,
   _dlt_id varchar NOT NULL
);

INSERT INTO
   bigquery.open_collective.expenses (
      id,
      legacy_id,
      "group",
      type,
      kind,
      description,
      amount,
      amount_in_host_currency,
      host_currency_fx_rate,
      net_amount,
      net_amount_in_host_currency,
      tax_amount,
      tax_info,
      platform_fee,
      host_fee,
      payment_processor_fee,
      account,
      from_account,
      to_account,
      expense,
      "order",
      created_at,
      updated_at,
      is_refunded,
      is_refund,
      is_disputed,
      is_in_review,
      payment_method,
      payout_method,
      is_order_rejected,
      merchant_id,
      invoice_template,
      host,
      _dlt_load_id,
      _dlt_id
   )
VALUES
   (
      '1',
      1,
      'group1',
      'type1',
      'kind1',
      'description1',
      json_parse('{}'),
      json_parse('{}'),
      1.0,
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      current_timestamp - interval '2' day,
      current_timestamp - interval '2' day,
      false,
      false,
      false,
      false,
      json_parse('{}'),
      json_parse('{}'),
      false,
      'merchant1',
      'template1',
      json_parse('{}'),
      'load_id1',
      'id1'
   ),
   (
      '2',
      2,
      'group2',
      'type2',
      'kind2',
      'description2',
      json_parse('{}'),
      json_parse('{}'),
      1.0,
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      json_parse('{}'),
      current_timestamp - interval '1' day,
      current_timestamp - interval '1' day,
      false,
      false,
      false,
      false,
      json_parse('{}'),
      json_parse('{}'),
      false,
      'merchant2',
      'template2',
      json_parse('{}'),
      'load_id2',
      'id2'
   );