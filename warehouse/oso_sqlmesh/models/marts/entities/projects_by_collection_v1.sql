MODEL (
  name oso.projects_by_collection_v1,
  kind FULL,
  tags (
    'export',
    'entity_category=collection'
  ),
  audits (
    has_at_least_n_rows(threshold := 0)
  ),
  description 'Many-to-many registry of projects and collections. Each row represents the association between a specific open source project and a collection or grouping, including details such as project and collection identifiers, names, and sources. This data can be used to analyze how projects are organized, tracked, or funded within different ecosystems or platforms. Business questions that can be answered include: Which projects were part of Optimism Retro Funding 4? Which projects have been in more than one Optimism Retro Funding rounds? Which projects are included in both Ethereum and Solana ecosystems?',
  column_descriptions (
    project_id = 'The unique identifier for the project, as generated by OSO.',
    project_source = 'The source of the project, such as "OSS_DIRECTORY", or "OP_ATLAS".',
    project_namespace = 'The namespace of the project within the source, which may include organization information.',
    project_name = 'The project slug or other name given to the project (unique to the registry but not globally unique).',
    collection_id = 'The unique identifier for the collection, as generated by OSO.',
    collection_source = 'The source of the collection, such as "OSS_DIRECTORY", or "OP_ATLAS".',
    collection_namespace = 'The namespace of the collection within the source, which may include organization information.',
    collection_name = 'The name of the collection.'
  )
);

SELECT
  projects_by_collection.project_id,
  projects_by_collection.project_source,
  projects_by_collection.project_namespace,
  projects_by_collection.project_name,
  collections.collection_id,
  collections.collection_source,
  collections.collection_namespace,
  collections.collection_name
FROM oso.int_projects_by_collection AS projects_by_collection
LEFT JOIN oso.int_collections AS collections
  ON projects_by_collection.collection_id = collections.collection_id
